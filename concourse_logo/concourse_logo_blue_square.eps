%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G1421) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 500 500
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 500 500
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.2 0.59607846 0.86274511 sc
q
0 500 m
500 500 l
500 0 l
0 0 l
0 500 l
h
W*
0 0 500 500 rc
-5 505 m
505 505 l
505 -5 l
-5 -5 l
h
f
Q
1 1 1 sc
q
256.20355 230.14711 m
245.55684 229.27168 236.20787 237.09131 235.32202 247.61276 c
234.43617 258.13422 242.34889 267.3732 252.99559 268.24863 c
263.6423 269.12405 272.99127 261.30441 273.87711 250.78296 c
274.76297 240.26152 266.85025 231.02254 256.20355 230.14711 c
h
W
0 0 500 500 rc
230.25433 273.31552 m
278.94479 273.31552 l
278.94479 225.08022 l
230.25433 225.08022 l
h
f
Q
q
279.07169 232.95454 m
274.67105 228.01984 269.29251 224.19543 263.18051 221.72807 c
263.18051 221.60471 l
267.82562 203.71637 275.03778 186.6916 284.57248 170.90051 c
276.13794 166.45927 267.09219 163.49844 257.67972 162.26476 c
256.33508 162.14139 l
254.74596 162.01802 l
251.56772 161.77129 l
249.61188 161.77129 247.65604 161.64792 245.70021 161.77129 c
237.63237 161.89465 229.68678 163.25171 222.10791 165.84242 c
218.56296 166.95274 215.01799 168.43315 211.71751 170.03694 c
208.66151 171.51735 205.72777 173.12114 202.91624 174.97165 c
200.47145 176.57544 198.1489 178.17921 195.94858 180.02974 c
193.8705 181.63351 192.28137 183.2373 190.8145 184.47098 c
188.12521 187.06171 186.65834 188.66548 186.65834 188.66548 c
186.65834 188.66548 187.88074 186.93834 190.20329 183.97751 c
191.42569 182.49709 192.89258 180.76994 194.72617 178.91942 c
196.80424 176.69881 198.88232 174.72491 201.20488 172.75104 c
203.89417 170.40704 206.70569 168.30978 209.63943 166.33591 c
212.93991 164.11528 216.36263 162.14139 219.90759 160.41425 c
223.69702 158.56372 227.73094 156.95995 231.76486 155.60289 c
236.04326 154.24585 240.32166 153.25891 244.72229 152.51871 c
246.92261 152.14859 249.24516 151.90186 251.56772 151.65512 c
254.74596 151.40839 l
256.33508 151.28502 l
258.16867 151.28502 l
262.56931 151.28502 266.96994 151.53175 271.37057 152.14859 c
278.82721 153.13554 286.16162 155.10942 293.25153 157.94688 c
295.9408 154.24585 298.75232 150.66818 301.68607 147.21388 c
301.56384 147.09052 301.44159 147.09052 301.31937 146.96715 c
297.77438 144.74652 l
297.28543 144.49979 l
297.16321 144.37642 l
296.552 144.12968 297.89664 144.74652 297.77438 144.62315 c
297.65216 144.62315 l
297.40768 144.49979 l
297.04095 144.37642 296.67422 144.12968 296.30753 144.00632 c
294.10721 142.89601 l
292.8848 142.27917 l
292.27359 141.90906 l
292.02911 141.78569 l
291.90689 141.78569 l
291.78464 141.78569 292.64032 142.15581 292.27359 141.90906 c
292.15137 141.78569 l
291.29568 141.41559 290.44 141.04549 289.58432 140.67538 c
288.72864 140.30528 287.75073 139.93518 286.89505 139.44171 c
286.52832 139.31834 l
287.13953 139.56508 286.65057 139.31834 286.7728 139.44171 c
286.65057 139.44171 l
286.52832 139.31834 l
285.79489 139.07161 l
284.328 138.45476 l
271.00388 133.27332 256.70178 130.80595 242.27748 131.29942 c
240.44389 131.42279 l
238.36581 131.54616 l
234.08742 131.91628 l
231.52039 132.28638 228.8311 132.53311 226.14183 133.14995 c
215.50696 135.12384 205.2388 138.57814 195.58185 143.63622 c
193.25929 144.86989 191.05898 146.10358 188.85866 147.33725 c
186.65834 148.57092 184.7025 150.05135 182.62442 151.40839 c
178.95723 153.99911 175.29002 156.83658 171.98955 159.79741 c
169.0558 162.38812 166.36652 165.10222 163.79948 167.93968 c
161.35469 170.40704 159.64333 172.8744 158.0542 174.84828 c
156.46509 176.82217 155.48717 178.42595 154.63148 179.53625 c
153.40909 181.26341 l
153.40909 181.26341 153.77582 180.64658 154.38701 179.53625 c
155.12045 178.42595 155.97614 176.57544 157.32077 174.47818 c
158.66541 172.38092 160.25453 169.79021 162.45485 166.95274 c
164.7774 163.74518 167.34444 160.66098 169.91147 157.82352 c
173.08971 154.36922 176.39018 151.03828 179.93515 148.07745 c
181.89099 146.47368 183.84682 144.74652 185.9249 143.26611 c
188.00298 141.66232 190.20329 140.05855 192.52585 138.57814 c
197.29321 135.49394 202.1828 132.77985 207.31688 130.31248 c
212.69543 127.84513 218.19623 125.74788 223.81926 124.1441 c
226.63078 123.28052 229.68678 122.66368 232.62054 121.92347 c
236.77669 121.18327 l
238.85477 120.81316 l
241.17732 120.44305 l
246.92261 119.70285 252.66788 119.33275 258.41315 119.33275 c
268.80356 119.45612 279.07169 120.93653 289.09537 123.65062 c
290.56226 124.02073 l
291.29568 124.26746 l
292.39584 124.63757 l
293.37375 125.00767 294.35168 125.2544 295.20737 125.6245 c
297.89664 126.48808 l
300.83038 127.5984 l
301.68607 127.9685 302.41953 128.21523 303.15295 128.46198 c
303.51968 128.58534 303.88638 128.70871 304.25311 128.95544 c
304.49759 129.07881 l
304.61984 129.07881 l
305.35327 129.44891 l
305.47552 129.57228 l
305.96448 129.81902 l
309.63165 131.66953 l
311.58749 132.65648 313.05438 133.39668 314.27679 133.89015 c
317.45502 130.80595 320.63327 127.84513 324.05597 125.13103 c
324.05597 125.13103 340.0694 108.47637 348.87067 115.2616 c
357.18298 121.67673 347.64828 141.90906 347.64828 141.90906 c
334.93533 178.42595 310.85406 210.5016 279.07169 232.95454 c
h
W
0 0 500 500 rc
148.40909 237.95454 m
357.27274 237.95454 l
357.27274 108.63636 l
148.40909 108.63636 l
h
f
Q
q
225.8138 256.35461 m
208.34598 261.50565 190.26741 264.02127 172.18883 263.90149 c
172.67744 273.60461 175.1205 283.06815 179.27368 291.81296 c
179.88445 293.01086 l
180.61736 294.44836 l
182.08319 297.20358 l
183.06041 298.88068 183.91548 300.55774 185.13699 302.11505 c
189.53448 308.70358 194.90921 314.57336 201.01683 319.60461 c
203.82634 322.00046 206.88016 324.15671 210.05612 326.07336 c
212.86563 327.87024 215.91943 329.42755 218.97325 330.86505 c
221.53845 332.06296 224.22581 333.14108 226.91316 334.09943 c
229.35622 335.05777 231.55496 335.53693 233.26511 336.01608 c
236.80753 336.85464 239.00627 337.3338 239.00627 337.3338 c
239.00627 337.3338 236.92967 337.21402 233.14294 336.73483 c
231.31065 336.49527 228.98976 336.25568 226.42456 335.65671 c
223.4929 335.05777 220.6834 334.33902 217.87389 333.50046 c
214.57576 332.42233 211.27765 331.22443 207.97952 329.78693 c
204.31496 328.22961 200.89468 326.31296 197.59656 324.27649 c
193.93198 322.00046 190.51172 319.60461 187.21359 316.84943 c
183.79332 313.97443 180.61736 310.97961 177.6857 307.62546 c
176.21986 306.06818 174.75403 304.15149 173.28821 302.35461 c
171.45592 299.83899 l
170.60085 298.5213 l
169.62363 297.0838 l
167.30273 293.49005 165.10399 289.65671 163.39384 285.70358 c
160.09573 278.63586 157.77483 271.08899 156.5533 263.42233 c
156.5533 263.06296 l
152.15581 262.70358 147.75832 262.10461 143.36082 261.38586 c
143.36082 262.10461 143.36082 262.82336 143.36082 263.6619 c
143.36082 264.85983 143.36082 266.17752 143.36082 267.73483 c
143.36082 268.33377 l
143.36082 268.45358 l
143.48299 269.05252 143.23868 267.61502 143.23868 267.73483 c
143.23868 267.85461 l
143.23868 268.09421 l
143.23868 268.45358 143.36082 268.81296 143.36082 269.29211 c
143.48299 270.13065 143.48299 270.8494 143.60513 271.68796 c
143.60513 272.16711 143.72729 272.52649 143.72729 273.00565 c
143.72729 273.60461 l
143.72729 273.96399 l
143.72729 274.08377 l
143.72729 274.20358 143.60513 273.24524 143.60513 273.7244 c
143.60513 273.84421 l
143.72729 274.68274 143.84944 275.64108 143.97159 276.5994 c
144.09375 277.55774 144.2159 278.51608 144.46021 279.4744 c
144.46021 279.83377 l
144.33806 279.23483 144.46021 279.71399 144.33806 279.59421 c
144.33806 279.71399 l
144.33806 279.95358 l
144.46021 280.67233 l
144.70451 282.22961 l
147.75832 296.00568 153.25519 309.18274 161.1951 320.80255 c
162.29448 322.35983 l
163.51601 324.03693 l
166.08121 327.39108 l
167.79134 329.30777 169.37932 331.46402 171.33376 333.38068 c
178.54076 341.16714 186.96928 347.99527 196.25288 353.38589 c
198.45163 354.70358 200.65038 355.90152 202.97127 356.97964 c
205.17001 358.17755 207.49092 359.13589 209.5675 360.09421 c
213.72069 361.89108 217.99603 363.32858 222.27138 364.6463 c
225.93594 365.72443 229.72267 366.56296 233.5094 367.28171 c
236.92967 368.00049 239.86134 368.24005 242.30438 368.59943 c
244.74744 368.83902 246.70187 368.9588 248.04556 369.07861 c
250 369.07861 l
247.9234 369.19839 l
246.57973 369.19839 244.62529 369.31818 242.18224 369.31818 c
239.73918 369.19839 236.68538 369.31818 233.14294 368.9588 c
229.23407 368.59943 225.32518 368.12027 221.53845 367.40152 c
216.89667 366.56296 212.37701 365.48483 207.97952 364.04733 c
205.65863 363.32858 203.21558 362.49005 200.77252 361.53171 c
198.32947 360.69318 195.88643 359.61505 193.44337 358.41714 c
188.31297 356.0213 183.42686 353.38589 178.66292 350.39108 c
173.77681 347.27652 169.13501 343.68277 164.73752 339.84943 c
162.53877 338.05255 160.34003 335.77652 158.26344 333.74005 c
155.45393 330.62546 l
153.9881 329.06818 l
152.52228 327.2713 l
148.8577 322.9588 145.43742 318.28693 142.50577 313.49524 c
137.13106 304.87024 132.85571 295.52649 129.92406 285.82336 c
129.43544 284.38586 l
129.19113 283.66711 l
128.94682 282.58899 l
128.70253 281.63065 128.45822 280.67233 128.21391 279.71399 c
127.96961 278.75565 127.7253 277.91711 127.481 276.95877 c
127.23669 275.88065 127.11454 274.92233 126.87024 273.96399 c
126.74809 273.12546 126.50378 272.2869 126.38163 271.56815 c
126.25948 271.20877 126.25948 270.8494 126.13732 270.37024 c
126.13732 270.13065 l
126.13732 270.01086 l
126.01517 269.29211 l
126.01517 269.17233 l
126.01517 268.57336 l
125.89302 267.13586 125.77087 265.81815 125.52656 264.50046 c
125.1601 260.7869 124.91579 258.39108 124.79365 257.31296 c
120.5183 256.23483 116.24297 254.91711 112.08978 253.47961 c
112.08978 253.47961 89.735863 248.32857 90.95739 237.54732 c
92.178917 227.36502 114.16637 225.32857 114.16637 225.32857 c
152.15581 217.6619 191.61108 221.8546 227.03532 237.30772 c
225.20303 243.5369 224.71442 250.00565 225.8138 256.35461 c
h
W
0 0 500 500 rc
85.909088 374.31818 m
255 374.31818 l
255 216.59091 l
85.909088 216.59091 l
h
f
Q
q
380.29422 264.79593 m
379.8002 270.66193 378.81219 276.40573 377.4537 282.14951 c
376.83618 285.08252 375.84818 287.89331 375.10718 290.82629 c
373.74866 294.85919 l
373.00766 296.81451 l
372.14316 299.01428 l
370.04364 304.39145 367.45013 309.5242 364.48611 314.53473 c
359.29907 323.45593 352.87701 331.76611 345.46698 339.0986 c
344.35547 340.19849 l
343.86145 340.80954 l
342.99695 341.54279 l
342.25595 342.27603 341.51492 342.88708 340.77393 343.62033 c
340.03293 344.23135 339.29193 344.96463 338.67441 345.57565 c
337.80991 346.3089 337.06891 346.91995 336.20441 347.53101 c
334.22839 349.11969 l
333.24039 349.85297 l
332.99338 350.09738 l
332.37589 350.58621 l
332.25238 350.7084 l
331.75836 351.07504 l
330.52335 351.93048 329.41187 352.66376 328.30035 353.397 c
326.32434 354.7413 324.84232 355.84116 323.7308 356.5744 c
324.96582 361.21832 325.95383 365.98447 326.69482 370.75058 c
327.92984 377.96088 332.99338 392.8703 322.61929 397.14758 c
312.86273 401.18048 300.14215 382.84921 300.14215 382.84921 c
274.57745 353.397 259.13983 316.7345 255.68182 278.11664 c
262.10385 276.77234 268.2789 273.96155 273.46594 269.92868 c
273.58945 269.92868 l
286.31003 282.39392 297.17813 296.5701 305.82318 311.96835 c
314.09775 306.8356 321.38431 300.23636 327.18884 292.41501 c
328.05334 291.31516 l
328.91785 289.97086 l
330.64685 287.28226 l
331.63486 285.57135 332.74637 283.98264 333.61087 282.14951 c
337.43942 275.06143 340.15643 267.4845 341.76193 259.66318 c
342.50296 255.99692 342.99695 252.33067 343.24396 248.54221 c
343.49097 245.12038 343.49097 241.82076 343.24396 238.39891 c
343.12045 235.58812 342.74994 232.65512 342.25595 229.84433 c
341.88544 227.27795 341.39145 225.0782 340.89743 223.24507 c
339.90942 219.70103 339.29193 217.62349 339.29193 217.62349 c
339.29193 217.62349 340.15643 219.57883 341.63843 223.00066 c
342.25595 224.71158 343.12045 226.91133 343.86145 229.47771 c
344.72595 232.2885 345.46698 235.2215 345.96097 238.03229 c
346.57846 241.45413 347.07248 244.99817 347.31949 248.54221 c
347.56647 252.45288 347.56647 256.48575 347.31949 260.39642 c
347.07248 264.67371 346.45499 268.95102 345.59045 273.10611 c
344.60245 277.50558 343.36746 281.7829 341.88544 285.93799 c
341.14444 288.0155 340.15643 290.21527 339.16843 292.29282 c
337.80991 295.10361 l
337.06891 296.5701 l
336.69839 298.15881 l
334.59888 302.06949 332.12888 305.73572 329.41187 309.27979 c
324.71881 315.51239 319.16129 321.01178 312.98624 325.90012 c
314.83875 330.05521 316.69125 334.33249 318.17328 338.73199 c
318.91428 338.36536 l
322.61929 336.41003 l
323.11331 336.16562 l
323.23682 336.0434 l
323.7308 335.67679 322.49579 336.53223 322.61929 336.41003 c
322.8663 336.28781 l
323.85431 335.67679 l
325.95383 334.33249 l
327.06534 333.59924 l
327.68283 333.2326 l
327.92984 332.98819 l
328.05334 332.98819 l
328.17685 332.866 327.43582 333.47702 327.68283 333.2326 c
327.80634 333.11041 l
328.54733 332.49936 329.28836 332.01053 330.15286 331.39948 c
332.62286 329.56638 l
332.99338 329.32196 l
332.49936 329.68857 332.86987 329.44415 332.74637 329.56638 c
332.86987 329.56638 l
332.99338 329.44415 l
333.61087 328.95532 l
334.84589 327.97766 l
346.08447 318.81201 355.22354 307.56885 361.89258 294.85919 c
362.75708 293.14825 l
363.62161 291.19293 l
365.47412 287.40448 l
366.46213 284.9603 367.57364 282.51614 368.31464 279.94977 c
371.89615 269.80646 373.99567 259.05212 374.36618 248.29779 c
374.48969 245.73141 374.48969 243.16504 374.48969 240.59866 c
374.48969 238.03229 374.24268 235.58812 374.11917 233.26616 c
373.74866 228.74446 373.00766 224.34496 372.01965 219.82324 c
371.15515 216.03479 370.16714 212.36853 368.93213 208.70229 c
367.94412 205.40265 366.70911 202.59186 365.8446 200.2699 c
364.8566 197.94795 363.9921 196.23703 363.49811 195.01494 c
362.88058 193.79286 362.63358 193.18182 362.63358 193.18182 c
362.63358 193.18182 363.00409 193.79286 363.74509 194.89273 c
364.36261 195.99261 365.47412 197.70352 366.70911 199.90327 c
367.82062 202.10303 369.30264 204.79161 370.66116 207.96902 c
372.26666 211.51308 373.74866 215.17932 374.86017 218.96779 c
376.34219 223.36728 377.4537 227.88899 378.44171 232.53291 c
378.9357 234.97708 379.42972 237.54346 379.67673 240.10983 c
380.04721 242.67621 380.29422 245.36479 380.41772 248.05338 c
380.78821 253.55275 380.78821 259.17435 380.29422 264.79593 c
h
W
0 0 500 500 rc
250.68182 402.72726 m
385.68182 402.72726 l
385.68182 188.18182 l
250.68182 188.18182 l
h
f
ep
end
%%Trailer
%%EOF
