%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G1421) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 500 500
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 500 500
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 501 m
500 501 l
500 1 l
0 1 l
0 501 l
h
W*
0 0 500 500 rc
-5 506 m
505 506 l
505 -4 l
-5 -4 l
h
f
Q
0.2 0.59607846 0.86274511 sc
q
256.20355 231.14711 m
245.55684 230.27168 236.20787 238.09131 235.32202 248.61276 c
234.43617 259.13422 242.34889 268.3732 252.99559 269.24863 c
263.6423 270.12405 272.99127 262.30441 273.87711 251.78296 c
274.76297 241.26152 266.85025 232.02254 256.20355 231.14711 c
h
W
0 0 500 500 rc
230.25433 274.31552 m
278.94479 274.31552 l
278.94479 226.08022 l
230.25433 226.08022 l
h
f
Q
q
279.07169 233.95454 m
274.67105 229.01984 269.29251 225.19543 263.18051 222.72807 c
263.18051 222.60471 l
267.82562 204.71637 275.03778 187.6916 284.57248 171.90051 c
276.13794 167.45927 267.09219 164.49844 257.67972 163.26476 c
256.33508 163.14139 l
254.74596 163.01802 l
251.56772 162.77129 l
249.61188 162.77129 247.65604 162.64792 245.70021 162.77129 c
237.63237 162.89465 229.68678 164.25171 222.10791 166.84242 c
218.56296 167.95274 215.01799 169.43315 211.71751 171.03694 c
208.66151 172.51735 205.72777 174.12114 202.91624 175.97165 c
200.47145 177.57544 198.1489 179.17921 195.94858 181.02974 c
193.8705 182.63351 192.28137 184.2373 190.8145 185.47098 c
188.12521 188.06171 186.65834 189.66548 186.65834 189.66548 c
186.65834 189.66548 187.88074 187.93834 190.20329 184.97751 c
191.42569 183.49709 192.89258 181.76994 194.72617 179.91942 c
196.80424 177.69881 198.88232 175.72491 201.20488 173.75104 c
203.89417 171.40704 206.70569 169.30978 209.63943 167.33591 c
212.93991 165.11528 216.36263 163.14139 219.90759 161.41425 c
223.69702 159.56372 227.73094 157.95995 231.76486 156.60289 c
236.04326 155.24585 240.32166 154.25891 244.72229 153.51871 c
246.92261 153.14859 249.24516 152.90186 251.56772 152.65512 c
254.74596 152.40839 l
256.33508 152.28502 l
258.16867 152.28502 l
262.56931 152.28502 266.96994 152.53175 271.37057 153.14859 c
278.82721 154.13554 286.16162 156.10942 293.25153 158.94688 c
295.9408 155.24585 298.75232 151.66818 301.68607 148.21388 c
301.56384 148.09052 301.44159 148.09052 301.31937 147.96715 c
297.77438 145.74652 l
297.28543 145.49979 l
297.16321 145.37642 l
296.552 145.12968 297.89664 145.74652 297.77438 145.62315 c
297.65216 145.62315 l
297.40768 145.49979 l
297.04095 145.37642 296.67422 145.12968 296.30753 145.00632 c
294.10721 143.89601 l
292.8848 143.27917 l
292.27359 142.90906 l
292.02911 142.78569 l
291.90689 142.78569 l
291.78464 142.78569 292.64032 143.15581 292.27359 142.90906 c
292.15137 142.78569 l
291.29568 142.41559 290.44 142.04549 289.58432 141.67538 c
288.72864 141.30528 287.75073 140.93518 286.89505 140.44171 c
286.52832 140.31834 l
287.13953 140.56508 286.65057 140.31834 286.7728 140.44171 c
286.65057 140.44171 l
286.52832 140.31834 l
285.79489 140.07161 l
284.328 139.45476 l
271.00388 134.27332 256.70178 131.80595 242.27748 132.29942 c
240.44389 132.42279 l
238.36581 132.54616 l
234.08742 132.91628 l
231.52039 133.28638 228.8311 133.53311 226.14183 134.14995 c
215.50696 136.12384 205.2388 139.57814 195.58185 144.63622 c
193.25929 145.86989 191.05898 147.10358 188.85866 148.33725 c
186.65834 149.57092 184.7025 151.05135 182.62442 152.40839 c
178.95723 154.99911 175.29002 157.83658 171.98955 160.79741 c
169.0558 163.38812 166.36652 166.10222 163.79948 168.93968 c
161.35469 171.40704 159.64333 173.8744 158.0542 175.84828 c
156.46509 177.82217 155.48717 179.42595 154.63148 180.53625 c
153.40909 182.26341 l
153.40909 182.26341 153.77582 181.64658 154.38701 180.53625 c
155.12045 179.42595 155.97614 177.57544 157.32077 175.47818 c
158.66541 173.38092 160.25453 170.79021 162.45485 167.95274 c
164.7774 164.74518 167.34444 161.66098 169.91147 158.82352 c
173.08971 155.36922 176.39018 152.03828 179.93515 149.07745 c
181.89099 147.47368 183.84682 145.74652 185.9249 144.26611 c
188.00298 142.66232 190.20329 141.05855 192.52585 139.57814 c
197.29321 136.49394 202.1828 133.77985 207.31688 131.31248 c
212.69543 128.84512 218.19623 126.74788 223.81926 125.1441 c
226.63078 124.28052 229.68678 123.66368 232.62054 122.92347 c
236.77669 122.18327 l
238.85477 121.81316 l
241.17732 121.44305 l
246.92261 120.70285 252.66788 120.33275 258.41315 120.33275 c
268.80356 120.45612 279.07169 121.93653 289.09537 124.65062 c
290.56226 125.02073 l
291.29568 125.26746 l
292.39584 125.63757 l
293.37375 126.00767 294.35168 126.2544 295.20737 126.6245 c
297.89664 127.48808 l
300.83038 128.59839 l
301.68607 128.96849 302.41953 129.21523 303.15295 129.46198 c
303.51968 129.58534 303.88638 129.70871 304.25311 129.95544 c
304.49759 130.07881 l
304.61984 130.07881 l
305.35327 130.44891 l
305.47552 130.57228 l
305.96448 130.81902 l
309.63165 132.66953 l
311.58749 133.65648 313.05438 134.39668 314.27679 134.89015 c
317.45502 131.80595 320.63327 128.84512 324.05597 126.13103 c
324.05597 126.13103 340.0694 109.47637 348.87067 116.2616 c
357.18298 122.67673 347.64828 142.90906 347.64828 142.90906 c
334.93533 179.42595 310.85406 211.5016 279.07169 233.95454 c
h
W
0 0 500 500 rc
148.40909 238.95454 m
357.27274 238.95454 l
357.27274 109.63636 l
148.40909 109.63636 l
h
f
Q
q
225.8138 257.35461 m
208.34598 262.50565 190.26741 265.02127 172.18883 264.90149 c
172.67744 274.60461 175.1205 284.06815 179.27368 292.81296 c
179.88445 294.01086 l
180.61736 295.44836 l
182.08319 298.20358 l
183.06041 299.88068 183.91548 301.55774 185.13699 303.11505 c
189.53448 309.70358 194.90921 315.57336 201.01683 320.60461 c
203.82634 323.00046 206.88016 325.15671 210.05612 327.07336 c
212.86563 328.87024 215.91943 330.42755 218.97325 331.86505 c
221.53845 333.06296 224.22581 334.14108 226.91316 335.09943 c
229.35622 336.05777 231.55496 336.53693 233.26511 337.01608 c
236.80753 337.85464 239.00627 338.3338 239.00627 338.3338 c
239.00627 338.3338 236.92967 338.21402 233.14294 337.73483 c
231.31065 337.49527 228.98976 337.25568 226.42456 336.65671 c
223.4929 336.05777 220.6834 335.33902 217.87389 334.50046 c
214.57576 333.42233 211.27765 332.22443 207.97952 330.78693 c
204.31496 329.22961 200.89468 327.31296 197.59656 325.27649 c
193.93198 323.00046 190.51172 320.60461 187.21359 317.84943 c
183.79332 314.97443 180.61736 311.97961 177.6857 308.62546 c
176.21986 307.06818 174.75403 305.15149 173.28821 303.35461 c
171.45592 300.83899 l
170.60085 299.5213 l
169.62363 298.0838 l
167.30273 294.49005 165.10399 290.65671 163.39384 286.70358 c
160.09573 279.63586 157.77483 272.08899 156.5533 264.42233 c
156.5533 264.06296 l
152.15581 263.70358 147.75832 263.10461 143.36082 262.38586 c
143.36082 263.10461 143.36082 263.82336 143.36082 264.6619 c
143.36082 265.85983 143.36082 267.17752 143.36082 268.73483 c
143.36082 269.33377 l
143.36082 269.45358 l
143.48299 270.05252 143.23868 268.61502 143.23868 268.73483 c
143.23868 268.85461 l
143.23868 269.09421 l
143.23868 269.45358 143.36082 269.81296 143.36082 270.29211 c
143.48299 271.13065 143.48299 271.8494 143.60513 272.68796 c
143.60513 273.16711 143.72729 273.52649 143.72729 274.00565 c
143.72729 274.60461 l
143.72729 274.96399 l
143.72729 275.08377 l
143.72729 275.20358 143.60513 274.24524 143.60513 274.7244 c
143.60513 274.84421 l
143.72729 275.68274 143.84944 276.64108 143.97159 277.5994 c
144.09375 278.55774 144.2159 279.51608 144.46021 280.4744 c
144.46021 280.83377 l
144.33806 280.23483 144.46021 280.71399 144.33806 280.59421 c
144.33806 280.71399 l
144.33806 280.95358 l
144.46021 281.67233 l
144.70451 283.22961 l
147.75832 297.00568 153.25519 310.18274 161.1951 321.80255 c
162.29448 323.35983 l
163.51601 325.03693 l
166.08121 328.39108 l
167.79134 330.30777 169.37932 332.46402 171.33376 334.38068 c
178.54076 342.16714 186.96928 348.99527 196.25288 354.38589 c
198.45163 355.70358 200.65038 356.90152 202.97127 357.97964 c
205.17001 359.17755 207.49092 360.13589 209.5675 361.09421 c
213.72069 362.89108 217.99603 364.32858 222.27138 365.6463 c
225.93594 366.72443 229.72267 367.56296 233.5094 368.28171 c
236.92967 369.00049 239.86134 369.24005 242.30438 369.59943 c
244.74744 369.83902 246.70187 369.9588 248.04556 370.07861 c
250 370.07861 l
247.9234 370.19839 l
246.57973 370.19839 244.62529 370.31818 242.18224 370.31818 c
239.73918 370.19839 236.68538 370.31818 233.14294 369.9588 c
229.23407 369.59943 225.32518 369.12027 221.53845 368.40152 c
216.89667 367.56296 212.37701 366.48483 207.97952 365.04733 c
205.65863 364.32858 203.21558 363.49005 200.77252 362.53171 c
198.32947 361.69318 195.88643 360.61505 193.44337 359.41714 c
188.31297 357.0213 183.42686 354.38589 178.66292 351.39108 c
173.77681 348.27652 169.13501 344.68277 164.73752 340.84943 c
162.53877 339.05255 160.34003 336.77652 158.26344 334.74005 c
155.45393 331.62546 l
153.9881 330.06818 l
152.52228 328.2713 l
148.8577 323.9588 145.43742 319.28693 142.50577 314.49524 c
137.13106 305.87024 132.85571 296.52649 129.92406 286.82336 c
129.43544 285.38586 l
129.19113 284.66711 l
128.94682 283.58899 l
128.70253 282.63065 128.45822 281.67233 128.21391 280.71399 c
127.96961 279.75565 127.7253 278.91711 127.481 277.95877 c
127.23669 276.88065 127.11454 275.92233 126.87024 274.96399 c
126.74809 274.12546 126.50378 273.2869 126.38163 272.56815 c
126.25948 272.20877 126.25948 271.8494 126.13732 271.37024 c
126.13732 271.13065 l
126.13732 271.01086 l
126.01517 270.29211 l
126.01517 270.17233 l
126.01517 269.57336 l
125.89302 268.13586 125.77087 266.81815 125.52656 265.50046 c
125.1601 261.7869 124.91579 259.39108 124.79365 258.31296 c
120.5183 257.23483 116.24297 255.91711 112.08978 254.47961 c
112.08978 254.47961 89.735863 249.32857 90.95739 238.54732 c
92.178917 228.36502 114.16637 226.32857 114.16637 226.32857 c
152.15581 218.6619 191.61108 222.8546 227.03532 238.30772 c
225.20303 244.5369 224.71442 251.00565 225.8138 257.35461 c
h
W
0 0 500 500 rc
85.909088 375.31818 m
255 375.31818 l
255 217.59091 l
85.909088 217.59091 l
h
f
Q
q
380.29422 265.79593 m
379.8002 271.66193 378.81219 277.40573 377.4537 283.14951 c
376.83618 286.08252 375.84818 288.89331 375.10718 291.82629 c
373.74866 295.85919 l
373.00766 297.81451 l
372.14316 300.01428 l
370.04364 305.39145 367.45013 310.5242 364.48611 315.53473 c
359.29907 324.45593 352.87701 332.76611 345.46698 340.0986 c
344.35547 341.19849 l
343.86145 341.80954 l
342.99695 342.54279 l
342.25595 343.27603 341.51492 343.88708 340.77393 344.62033 c
340.03293 345.23135 339.29193 345.96463 338.67441 346.57565 c
337.80991 347.3089 337.06891 347.91995 336.20441 348.53101 c
334.22839 350.11969 l
333.24039 350.85297 l
332.99338 351.09738 l
332.37589 351.58621 l
332.25238 351.7084 l
331.75836 352.07504 l
330.52335 352.93048 329.41187 353.66376 328.30035 354.397 c
326.32434 355.7413 324.84232 356.84116 323.7308 357.5744 c
324.96582 362.21832 325.95383 366.98447 326.69482 371.75058 c
327.92984 378.96088 332.99338 393.8703 322.61929 398.14758 c
312.86273 402.18048 300.14215 383.84921 300.14215 383.84921 c
274.57745 354.397 259.13983 317.7345 255.68182 279.11664 c
262.10385 277.77234 268.2789 274.96155 273.46594 270.92868 c
273.58945 270.92868 l
286.31003 283.39392 297.17813 297.5701 305.82318 312.96835 c
314.09775 307.8356 321.38431 301.23636 327.18884 293.41501 c
328.05334 292.31516 l
328.91785 290.97086 l
330.64685 288.28226 l
331.63486 286.57135 332.74637 284.98264 333.61087 283.14951 c
337.43942 276.06143 340.15643 268.4845 341.76193 260.66318 c
342.50296 256.99692 342.99695 253.33067 343.24396 249.54221 c
343.49097 246.12038 343.49097 242.82076 343.24396 239.39891 c
343.12045 236.58812 342.74994 233.65512 342.25595 230.84433 c
341.88544 228.27795 341.39145 226.0782 340.89743 224.24507 c
339.90942 220.70103 339.29193 218.62349 339.29193 218.62349 c
339.29193 218.62349 340.15643 220.57883 341.63843 224.00066 c
342.25595 225.71158 343.12045 227.91133 343.86145 230.47771 c
344.72595 233.2885 345.46698 236.2215 345.96097 239.03229 c
346.57846 242.45413 347.07248 245.99817 347.31949 249.54221 c
347.56647 253.45288 347.56647 257.48575 347.31949 261.39642 c
347.07248 265.67371 346.45499 269.95102 345.59045 274.10611 c
344.60245 278.50558 343.36746 282.7829 341.88544 286.93799 c
341.14444 289.0155 340.15643 291.21527 339.16843 293.29282 c
337.80991 296.10361 l
337.06891 297.5701 l
336.69839 299.15881 l
334.59888 303.06949 332.12888 306.73572 329.41187 310.27979 c
324.71881 316.51239 319.16129 322.01178 312.98624 326.90012 c
314.83875 331.05521 316.69125 335.33249 318.17328 339.73199 c
318.91428 339.36536 l
322.61929 337.41003 l
323.11331 337.16562 l
323.23682 337.0434 l
323.7308 336.67679 322.49579 337.53223 322.61929 337.41003 c
322.8663 337.28781 l
323.85431 336.67679 l
325.95383 335.33249 l
327.06534 334.59924 l
327.68283 334.2326 l
327.92984 333.98819 l
328.05334 333.98819 l
328.17685 333.866 327.43582 334.47702 327.68283 334.2326 c
327.80634 334.11041 l
328.54733 333.49936 329.28836 333.01053 330.15286 332.39948 c
332.62286 330.56638 l
332.99338 330.32196 l
332.49936 330.68857 332.86987 330.44415 332.74637 330.56638 c
332.86987 330.56638 l
332.99338 330.44415 l
333.61087 329.95532 l
334.84589 328.97766 l
346.08447 319.81201 355.22354 308.56885 361.89258 295.85919 c
362.75708 294.14825 l
363.62161 292.19293 l
365.47412 288.40448 l
366.46213 285.9603 367.57364 283.51614 368.31464 280.94977 c
371.89615 270.80646 373.99567 260.05212 374.36618 249.29779 c
374.48969 246.73141 374.48969 244.16504 374.48969 241.59866 c
374.48969 239.03229 374.24268 236.58812 374.11917 234.26616 c
373.74866 229.74446 373.00766 225.34496 372.01965 220.82324 c
371.15515 217.03479 370.16714 213.36853 368.93213 209.70229 c
367.94412 206.40265 366.70911 203.59186 365.8446 201.2699 c
364.8566 198.94795 363.9921 197.23703 363.49811 196.01494 c
362.88058 194.79286 362.63358 194.18182 362.63358 194.18182 c
362.63358 194.18182 363.00409 194.79286 363.74509 195.89273 c
364.36261 196.99261 365.47412 198.70352 366.70911 200.90327 c
367.82062 203.10303 369.30264 205.79161 370.66116 208.96902 c
372.26666 212.51308 373.74866 216.17932 374.86017 219.96779 c
376.34219 224.36728 377.4537 228.88899 378.44171 233.53291 c
378.9357 235.97708 379.42972 238.54346 379.67673 241.10983 c
380.04721 243.67621 380.29422 246.36479 380.41772 249.05338 c
380.78821 254.55275 380.78821 260.17435 380.29422 265.79593 c
h
W
0 0 500 500 rc
250.68182 403.72726 m
385.68182 403.72726 l
385.68182 189.18182 l
250.68182 189.18182 l
h
f
ep
end
%%Trailer
%%EOF
